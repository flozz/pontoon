name: Linux Install Test

on:
  push:
    branches:
      - master
    paths:
      - requirements/**
      - pontoon/**
      - .github/workflows/linux-install.yml
  pull_request:
    branches:
      - master
    paths:
      - requirements/**
      - pontoon/**
      - .github/workflows/linux-install.yml

jobs:

  build-install:

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        node-version: [14]
        postgres-version: [10, 11, 12, 13]
        os: [ubuntu-20.04]

    name: "${{matrix.os}} (py${{ matrix.python-version }}, node${{ matrix.node-version }}, pg${{ matrix.postgres-version }})"

    runs-on: ${{ matrix.os }}

    services:

      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: pontoonuser
          POSTGRES_PASSWORD: pontoonpassword
          POSTGRES_DB: pontoondb
        ports:
          - 5432:5432

    steps:

    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt

    - name: Install Node dependences
      run: |
        npm install
        cd frontend/
        npm install

    - name: Write basic configuration for Pontoon
      run: |
        echo "SECRET_KEY=pontoonsecret" >> .env
        echo "DATABASE_URL=postgres://pontoonuser:pontoonpassword@localhost/pontoondb" >> .env
        echo "DJANGO_DEBUG=0" >> .env

    - name: Build the front
      run: |
        cd frontend/
        npm run build
        cd -
        npm run build
        python manage.py collectstatic

    - name: Make DB migration
      run: |
        python manage.py migrate


